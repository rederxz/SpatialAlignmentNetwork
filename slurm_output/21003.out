Namespace(aux_aug='PBSpline', batch_size=16, coils=1, crop=320, epoch=20000, force_gpu=True, gan_sim_weight=1.0, gan_weight=0.1, intel_stop=5000, load_nets=['net_mask', 'net_D', 'net_G', 'net_T', 'net_R_pre'], logdir='/public/home/yangkd2022/libraries/SpatialAlignmentNetwork/LOG/T1_8xEquispacedT2_PBSplineRRR', lr=0.0004, mask='equispaced', num_workers=8, pre_sim_weight=0.1, prefetch=True, protocals=['T2', 'T1'], reg='RRR', resume='/public/home/yangkd2022/libraries/SpatialAlignmentNetwork/LOG/T1_8xEquispacedT2_PBSplineRecGANOnly/ckpt/best.pt', sim_weight=1.0, smooth_weight=1000.0, sparsity=0.125, train='/public/home/yangkd2022/libraries/SpatialAlignmentNetwork/fastMRI_brain_DICOM/t1_t2_paired_6875_train.csv', use_amp=False, val='/public/home/yangkd2022/libraries/SpatialAlignmentNetwork/fastMRI_brain_DICOM/t1_t2_paired_6875_val.csv')
loading model...
Will load specified ckpt from: /public/home/yangkd2022/libraries/SpatialAlignmentNetwork/LOG/T1_8xEquispacedT2_PBSplineRecGANOnly/ckpt/best.pt , cnt: 0 , load nets: ['net_mask', 'net_D', 'net_G', 'net_T', 'net_R_pre']
dict_keys(['net_mask', 'net_D', 'net_G', 'net_T', 'net_R_pre'])
class Config containing: {'sparsity': 0.125, 'lr': 0.0004, 'shape': 320, 'coils': 1, 'reg': 'RRR', 'mask': 'equispaced', 'weight_smooth': 1000.0, 'weight_gan': 0.1, 'weight_gan_sim': 1.0, 'weight_sim': 1.0, 'weight_pre_sim': 0.1, 'use_amp': False}
loading data...
done, 2720 / 170 for training, 1088 / 68 for validation
training...
signal_end set due to intel_stop
reached end of training loop, and signal_end is True
saved final ckpt: /public/home/yangkd2022/libraries/SpatialAlignmentNetwork/LOG/T1_8xEquispacedT2_PBSplineRRR/ckpt/ckpt_0000108630.pt
